import{connect}from'cloudflare:sockets';
const d=new TextDecoder(),e=new TextEncoder(),i='123456',u='5aba5b77-48eb-4ae2-b60d-5bfee7ac169e',p=['1.1.1.1','8.8.8.8','1.0.0.1'],r='sjc.o00o.ooo:443',n='狂暴',U=(h=>{const a=new Uint8Array(16),s=h.replace(/-/g,'');for(let j=0;j<32;j+=2)a[j>>1]=parseInt(s.substr(j,2),16);return a})(u);
const c=b=>{for(let j=0;j<16;j++)if(b[j]!==U[j])return 0;return 1};
const t=async(h,o,a)=>{try{const s=await connect({hostname:h,port:o});return await s.opened,{tcpSocket:s,initialData:a}}catch{}if(r){const[h2,o2]=r.split(':');return await t(h2,+o2||o,a)}throw new Error('连接失败')};
const v=async b=>{const a=new Uint8Array(b),y=a[17],o=(a[18+y+1]<<8)|a[18+y+2];let j=18+y+4,h='';switch(a[j-1]){case 1:h=`${a[j++]}.${a[j++]}.${a[j++]}.${a[j++]}`;break;case 2:{const l=a[j++];h=d.decode(a.subarray(j,j+l));j+=l;break}case 3:h=Array.from({length:8},(_,k)=>((a[j+2*k]<<8)|a[j+2*k+1]).toString(16)).join(':');j+=16}return await t(h,o,b.slice(j))};
const m=(w,s,a)=>{const x=s.writable.getWriter();w.send(new Uint8Array([0,0]));a&&x.write(a);let b=[],y,z=0;const q=()=>{z||(z=1,y&&clearTimeout(y),b=null,x.releaseLock().catch(()=>{}),s.close().catch(()=>{}))};w.onmessage=({data})=>{if(z)return;const l=data instanceof ArrayBuffer?new Uint8Array(data):typeof data==='string'?e.encode(data):data;b.push(l),y||(y=setTimeout(()=>{if(z)return;let o;if(b.length===1)o=b[0];else{const len=b.reduce((s,x)=>s+x.length,0),arr=new Uint8Array(len);let pos=0;for(const x of b)arr.set(x,pos),pos+=x.length;o=arr}x.write(o).catch(q),b.length=0,y=null},5))};s.readable.pipeTo(new WritableStream({write:d=>w.send(d),close:q,abort:q})).catch(q);w.onclose=q};
const f=h=>p.concat([`${h}:443`]).map(x=>{const[a,b=n]=x.split('#'),[c,d=443]=a.split(':');return`vless://${u}@${c}:${d}?encryption=none&security=tls&type=ws&host=${h}&sni=${h}&path=%2F%3Fed%3D2560#${b}`}).join('\n');
export default{async fetch(req,env){const url=new URL(req.url),h=req.headers.get('Host');if(req.headers.get('Upgrade')!=='websocket'){const path=url.pathname;return path===`/${i}`?new Response(`订阅地址: https://${h}/${i}/vless`):path===`/${i}/vless`?new Response(f(h)):new Response('Hello Worker!')}try{const proto=req.headers.get('sec-websocket-protocol'),data=Uint8Array.from(atob(proto.replace(/-/g,'+').replace(/_/g,'/')),c=>c.charCodeAt(0));if(!c(data.subarray(1,17)))return new Response('无效UUID',{status:403});const{tcpSocket,initialData}=await v(data.buffer),[client,server]=new WebSocketPair();return server.accept(),m(server,tcpSocket,initialData),new Response(null,{status:101,webSocket:client})}catch(e){return new Response('连接失败: '+e.message,{status:502})}}}
